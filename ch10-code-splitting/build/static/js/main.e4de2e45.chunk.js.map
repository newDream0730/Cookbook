{"version":3,"sources":["People.js","About.js","OldAbout.js","App.js","reportWebVitals.js","index.js"],"names":["People","Offices","lazy","About","className","to","activeClassName","fallback","path","OldAbout","useState","tabId","setTabId","onClick","App","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIAMeA,UANA,kBAAM,+BACjB,4CACA,gDACA,oD,yKCGEC,EAAUC,gBAAK,kBAAM,gCA6BZC,EA3BD,kBACV,sBAAKC,UAAU,QAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAASC,GAAG,gBACHD,UAAU,YACVE,gBAAgB,SAFzB,oBAKA,cAAC,IAAD,CAASD,GAAG,iBACHD,UAAU,YACVE,gBAAgB,SAFzB,wBAMJ,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,gBAAZ,SACI,cAACR,EAAA,QAAD,MAEJ,cAAC,IAAD,CAAOQ,KAAK,iBAAZ,SACI,cAACP,EAAD,MAEJ,cAAC,IAAD,CAAUI,GAAG,2B,QC3BvBL,EAASE,gBAAK,kBAAM,2CACpBD,EAAUC,gBAAK,kBAAM,gCAyBZO,EAvBE,WAAO,IAAD,EACOC,mBAAS,UADhB,mBACZC,EADY,KACLC,EADK,KAGnB,OAAO,sBAAKR,UAAU,QAAf,UACH,sBAAKA,UAAU,aAAf,UACI,qBAAKS,QAAS,kBAAMD,EAAS,WACxBR,UAAqB,WAAVO,EAAqB,mBAAqB,YAD1D,oBAKA,qBAAKE,QAAS,kBAAMD,EAAS,YACxBR,UAAqB,YAAVO,EAAsB,mBAAqB,YAD3D,wBAMJ,eAAC,WAAD,CAAUJ,SAAU,6CAApB,UACe,WAAVI,GAAsB,cAAC,EAAD,IACZ,YAAVA,GAAuB,cAAC,EAAD,WCKrBG,MAxBf,WACE,OACE,+BACI,eAAC,IAAD,WACI,qBAAIC,KAAK,aAAT,UACI,6BAAI,cAAC,IAAD,CAAMV,GAAG,YAAT,yBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,SAAT,qBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,gBAAT,8BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,iBAAT,kCAER,eAAC,IAAD,WACI,cAAC,IAAD,CAAOG,KAAK,YAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACI,cAAC,EAAD,MAEJ,0DCVDQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e4de2e45.chunk.js","sourcesContent":["const People = () => <ul>\n    <li>Kip Russel</li>\n    <li>Harrison Swift</li>\n    <li>Carter Heaney</li>\n</ul>;\n\nexport default People;","import {lazy, Suspense} from 'react';\nimport {NavLink, Redirect, Route, Switch} from \"react-router-dom\";\nimport \"./About.css\";\nimport People from './People'\n// import Offices from './Offices'\n// const People = lazy(() => import(\"./People\"));\nconst Offices = lazy(() => import(\"./Offices\"));\n\nconst About = () =>\n    <div className='About'>\n        <div className='About-tabs'>\n            <NavLink to=\"/about/people\"\n                     className=\"About-tab\"\n                     activeClassName=\"active\">\n                People\n            </NavLink>\n            <NavLink to=\"/about/offices\"\n                     className=\"About-tab\"\n                     activeClassName=\"active\">\n                Offices\n            </NavLink>\n        </div>\n        <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n                <Route path='/about/people'>\n                    <People/>\n                </Route>\n                <Route path='/about/offices'>\n                    <Offices/>\n                </Route>\n                <Redirect to='/about/people'/>\n            </Switch>\n        </Suspense>\n    </div>;\n\nexport default About;","import {lazy, Suspense, useState} from \"react\";\nimport \"./About.css\";\n\nconst People = lazy(() => import(\"./People\"));\nconst Offices = lazy(() => import(\"./Offices\"));\n\nconst OldAbout = () => {\n    const [tabId, setTabId] = useState(\"people\")\n\n    return <div className='About'>\n        <div className='About-tabs'>\n            <div onClick={() => setTabId(\"people\")}\n                 className={tabId === \"people\" ? \"About-tab active\" : \"About-tab\"}\n            >\n                People\n            </div>\n            <div onClick={() => setTabId(\"offices\")}\n                 className={tabId === \"offices\" ? \"About-tab active\" : \"About-tab\"}\n            >\n                Offices\n            </div>\n        </div>\n        <Suspense fallback={<div>Loading...</div>}>\n            {tabId === \"people\" && <People/>}\n            {tabId === \"offices\" && <Offices/>}\n        </Suspense>\n    </div>;\n}\n\nexport default OldAbout;","import './App.css';\nimport {BrowserRouter, Link, Route, Switch} from \"react-router-dom\";\nimport About from \"./About\";\nimport OldAbout from \"./OldAbout\";\n\nfunction App() {\n  return (\n    <main>\n        <BrowserRouter>\n            <ul role='navigation'>\n                <li><Link to='/oldabout'>Old about</Link></li>\n                <li><Link to='/about'>About</Link></li>\n                <li><Link to='/about/people'>About (people)</Link></li>\n                <li><Link to='/about/offices'>About (offices)</Link></li>\n            </ul>\n            <Switch>\n                <Route path=\"/oldabout\">\n                    <OldAbout/>\n                </Route>\n                <Route path=\"/about/:tabId?\">\n                    <About/>\n                </Route>\n                <p>Choose an option</p>\n            </Switch>\n        </BrowserRouter>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}