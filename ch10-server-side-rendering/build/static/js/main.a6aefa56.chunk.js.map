{"version":3,"sources":["logo.svg","Widget.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","Widget","classes","Button","variant","color","className","startIcon","endIcon","Icon","disabled","size","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","hydrate","StrictMode","document","getElementById"],"mappings":"iLAAe,G,MAAA,IAA0B,kC,2GCQnCA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAQ,CACJC,OAAQF,EAAMG,QAAQ,QAiEfC,EA7DA,WACX,IAAMC,EAAUP,IAEhB,OACI,gCACI,cAACQ,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,YACNC,UAAWJ,EAAQJ,OACnBS,UAAW,cAAC,IAAD,IAJf,oBASA,cAACJ,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNC,UAAWJ,EAAQJ,OACnBU,QAAS,cAACC,EAAA,EAAD,mBAJb,kBAQA,cAACN,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNC,UAAWJ,EAAQJ,OACnBS,UAAW,cAAC,IAAD,IAJf,oBAQA,cAACJ,EAAA,EAAD,CACIC,QAAQ,YACRM,UAAQ,EACRL,MAAM,YACNC,UAAWJ,EAAQJ,OACnBS,UAAW,cAAC,IAAD,IALf,kBASA,cAACJ,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNM,KAAK,QACLL,UAAWJ,EAAQJ,OACnBS,UAAW,cAAC,IAAD,IALf,kBASA,cAACJ,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNM,KAAK,QACLL,UAAWJ,EAAQJ,OACnBS,UAAW,cAAC,IAAD,IALf,sBClCGK,MAxBf,WAEE,OACE,qBAAKN,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEE,qBAAKO,IAAKC,EAAMR,UAAU,WAAWS,IAAI,SACvC,cAAC,EAAD,IACF,sCACO,8CADP,0BAGA,mBACET,UAAU,WACVU,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCHOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,QACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a6aefa56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Button from '@material-ui/core/Button';\nimport {makeStyles} from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport Icon from '@material-ui/core/Icon';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nconst Widget = () => {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<DeleteIcon/>}\n            >\n                Delete\n            </Button>\n            {/* This Button uses a Font Icon, see the installation instructions in the Icon component docs. */}\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                endIcon={<Icon>send</Icon>}\n            >\n                Send\n            </Button>\n            <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                startIcon={<CloudUploadIcon/>}\n            >\n                Upload\n            </Button>\n            <Button\n                variant=\"contained\"\n                disabled\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<KeyboardVoiceIcon/>}\n            >\n                Talk\n            </Button>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                className={classes.button}\n                startIcon={<SaveIcon/>}\n            >\n                Save\n            </Button>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                className={classes.button}\n                startIcon={<SaveIcon/>}\n            >\n                Save\n            </Button>\n        </div>\n    );\n};\n\nexport default Widget;","import logo from './logo.svg'; // <-- Do not do this. Just refer to the image in IMG\nimport './App.css';\nimport Widget from \"./Widget\";\n\nfunction App() {\n    // console.log('XXXX logo', JSON.stringify(logo));\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/*<img src='./logo.svg' className=\"App-logo\" alt=\"logo\" />*/}\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <Widget/>\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.hydrate(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}